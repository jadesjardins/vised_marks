function [EEG,com]=pop_marks_label2manual(EEG,infotype,label)

com = ''; % this initialization ensure that the function will return something
          % if the user press the cancel button            


% display help if not enough arguments
% ------------------------------------
if nargin < 1
	help pop_marks_flagtype2manual;
	return;
end;	


infotype_cell={'time_info','chan_info'};
if ~isempty(EEG.icaweights);
    infotype_cell={infotype_cell{:},'comp_info'};
end
if exist('infotype');
    infotype_ind=find(strcmp(infotype,infotype_cell));
else
    infotype_ind=1;
end

% pop up window
% -------------
if nargin < 3

    results=inputgui( ...
    {[3 3] [1] [5 1]}, ...
    {...
    ...%1
    {'Style', 'text', 'string', 'Info type to edit'}, ...
    ... %2
            {'Style', 'popup', 'string', infotype_cell, 'value',infotype_ind,'tag', 'pop_it'...
            'callback', ['switch get(findobj(gcbf, ''tag'', ''pop_it''), ''value'');' ...
            '    case 1;' ...
            '        tmp_label = {EEG.marks.time_info.label};' ...
            '        set(findobj(gcbf, ''tag'', ''but_fl''), ''callback'',' ...
            '            [''[flaglabel_ind,flaglabel_str,flaglabel_cell]=pop_chansel({EEG.marks.time_info.label});' ...
            '             set(findobj(gcbf, ''''tag'''', ''''edt_fl''''), ''''string'''', vararg2str(flaglabel_cell))'']);' ...
            '        set(findobj(gcbf, ''tag'', ''edt_fl''), ''string'', '''');' ...
            '    case 2;' ...
            '        tmp_label = {EEG.marks.chan_info.label};' ...
            '        set(findobj(gcbf, ''tag'', ''but_fl''), ''callback'',' ...
            '            [''[flaglabel_ind,flaglabel_str,flaglabel_cell]=pop_chansel({EEG.marks.time_info.label});' ...
            '             set(findobj(gcbf, ''''tag'''', ''''edt_fl''''), ''''string'''', vararg2str(flaglabel_cell))'']);' ...
            '        set(findobj(gcbf, ''tag'', ''edt_fl''), ''string'', '''');' ...
            '    case 2;' ...
            '        tmp_label = {EEG.marks.comp_info.label};' ...
            '        set(findobj(gcbf, ''tag'', ''but_fl''), ''callback'',' ...
            '            [''[flaglabel_ind,flaglabel_str,flaglabel_cell]=pop_chansel({EEG.marks.comp_info.label});' ...
            '             set(findobj(gcbf, ''''tag'''', ''''edt_fl''''), ''''string'''', vararg2str(flaglabel_cell))'']);' ...
            '        set(findobj(gcbf, ''tag'', ''edt_fl''), ''string'', '''');' ...
            '    end;']}, ...
        ... %3
        {'Style', 'text', 'string', 'flag types to combine into ''manual'' flag'},...
        ... %4
        {'Style', 'edit', 'string', '', 'tag', 'edt_fl'}, ...
        ... %5
        {'Style', 'pushbutton', 'string', '...','tag','but_fl', ...
        'callback', ['[flaglabel_ind,flaglabel_str,flaglabel_cell]=pop_chansel({EEG.marks.time_info.label});' ...
        'set(findobj(gcbf, ''tag'', ''edt_fl''), ''string'', vararg2str(flaglabel_cell))']}, ...
    }, ...
    'pophelp(''pop_mark_flag_gap'');', 'mark periods of time between neighbouring flags -- pop_mark_flag_gap()' ...
    );

    infotype_ind  	 = results{1};
    label     	     = results{2}; 
%    newlabel  = results{3};
%    newcolor      = results{4};
end


eval(['ind=find(strcmp(''manual'',{EEG.marks.',infotype,'.label}));']);
eval(['[manual_bounds,manual_inds]=marks_label2index(EEG.marks.',infotype,',label);', ...
    'EEG.marks.',infotype,'(ind).flags(manual_inds)=1;']);
% create the string command
% -------------------------
%com = ['EEG = pop_marks_label2manual(EEG,''',infotype_cell{infotype_ind},''',{',label,'});'];
%exec_com = ['EEG = marks_label2manual(EEG,''',infotype_cell{infotype_ind},''',{',label,'});']

%eval(exec_com)
